---
- name: Create directories for SAP and DB2 kit on target
  file:
    path: "{{ item }}"
    state: directory
    mode: 0777
  loop:
    - "{{ sap_kit }}"
    - "{{ sap_kit }}/swpm"
    - "{{ sap_kit }}/export"
    - "{{ sap_kit }}/db2"
    - "{{ sap_kit }}/db2client"

- name: Gather the package facts for Ansible controller
  package_facts:
    manager: auto
  delegate_to: localhost

- name: Check if rsync package is available on Ansible controller
  set_fact:
    rsync_found_controller: true
  when: "'rsync' in ansible_facts.packages"
  delegate_to: localhost

- name: Gather the package facts for target
  package_facts:
    manager: auto

- name: Check if rsync package is available on target
  set_fact:
    rsync_found_target: true
  when: "'rsync' in ansible_facts.packages"

- name: Copy SAP and DB2 kit to target using rsync
  synchronize:
    src: "{{ item.saps_src }}"
    dest: "{{ item.saps_dest }}"
    checksum: yes
  loop: "{{ saps_kit }}"
  when: rsync_found_controller is defined and rsync_found_target is defined

- name: Copy SAP and DB2 kit to target when rsync is not available
  copy:
    src: "{{ item.saps_src }}"
    dest: "{{ item.saps_dest }}"
    owner: root
    group: root
    mode: 0777
  loop: "{{ saps_kit }}"
  when: rsync_found_controller is not defined or rsync_found_target is not defined

- name: Recursively change the ownership and permissions on the SAP kit directory
  file:
    path: "{{ sap_kit }}"
    state: directory
    mode: 0777
    recurse: yes
    owner: root
    group: root
  when: rsync_found_controller is defined and rsync_found_target is defined

- name: Extract SWPM archive
  command: "{{ sap_kit }}/sapcar -xf {{ sap_kit }}/swpm.sar -R {{ sap_kit }}/swpm"
...
