---
# - SAP Note:
#   - 405827 - Linux: Recommended file systems
# - https://www.ibm.com/docs/en/db2/11.5?topic=databases-recommended-file-systems

- name: Create a list for the IDs of the disks
  ansible.builtin.set_fact:
    disk_ids: "{{ [] }}"

- name: Get the disk for swap
  ansible.builtin.set_fact:
    swap_disk: "{{ device }}"
    disk_ids: "{{ disk_ids + [device]  }}"
  loop: "{{ ansible_devices.keys() | list }}"
  loop_control:
    loop_var: device
  when:
    - device | regex_search("dm-") is none
    - ansible_devices[device].partitions.keys() | length == 0
    - (ansible_devices[device].holders | length == 0) or (ansible_devices[device].holders[0] | regex_search("_swap_") is not none)
    - ansible_devices[device].links.labels | length == 0
    - ansible_devices[device].size == swap_disk_size
    - 'device not in disk_ids'

- name: Check if the required storage device for swap is found
  fail:
    msg: "Could not find a free {{ swap_disk_size }} storage device for swap"
  when:  swap_disk is not defined

- name: Create a volume group for swap
  lvg:
    vg: "{{ sap_sid|lower }}_swap_vg"
    pvs: "/dev/{{ swap_disk }}"
    pesize: "32"

- name: Get the RAM size
  set_fact:
    app_ram: "{{ sap_profile.split('-')[1].split('x')[1] }}"

- name: Get the disk for DB2 data
  ansible.builtin.set_fact:
    data_disk: "{{ device }}"
    disk_ids: "{{ disk_ids + [device]  }}"
  loop: "{{ ansible_devices.keys() | list }}"
  loop_control:
    loop_var: device
  when:
    - device | regex_search("dm-") is none
    - ansible_devices[device].partitions.keys() | length == 0
    - (ansible_devices[device].holders | length == 0) or (ansible_devices[device].holders[0] | regex_search("_data_") is not none)
    - ansible_devices[device].links.labels | length == 0
    - ansible_devices[device].size == data_disk_size
    - 'device not in disk_ids'

- name: Check if the required storage device for DB2 data is found
  fail:
    msg: "Could not find a free {{ data_disk_size }} storage device for DB2 data"
  when:  data_disk is not defined

- name: Create a volume group for DB2 data
  lvg:
    vg: "{{ sap_sid|lower }}_data_vg"
    pvs: "/dev/{{ data_disk }}"
    pesize: "32"

- name: Get the disk for DB2 logs
  ansible.builtin.set_fact:
    log_disk: "{{ device }}"
    disk_ids: "{{ disk_ids + [device]  }}"
  loop: "{{ ansible_devices.keys() | list }}"
  loop_control:
    loop_var: device
  when:
    - device | regex_search("dm-") is none
    - ansible_devices[device].partitions.keys() | length == 0
    - (ansible_devices[device].holders | length == 0) or (ansible_devices[device].holders[0] | regex_search("_log_") is not none)
    - ansible_devices[device].links.labels | length == 0
    - ansible_devices[device].size == log_disk_size
    - 'device not in disk_ids'

- name: Check if the required storage device for DB2 logs is found
  fail:
    msg: "Could not find a free {{ log_disk_size }} storage device for DB2 logs"
  when:  log_disk is not defined

- name: Create a volume group for DB2 logs
  lvg:
    vg: "{{ sap_sid|lower }}_log_vg"
    pvs: "/dev/{{ log_disk }}"
    pesize: "32"

- name: Get the disk for DB2 log archives
  ansible.builtin.set_fact:
    arch_disk: "{{ device }}"
    disk_ids: "{{ disk_ids + [device]  }}"
  loop: "{{ ansible_devices.keys() | list }}"
  loop_control:
    loop_var: device
  when:
    - device | regex_search("dm-") is none
    - ansible_devices[device].partitions.keys() | length == 0
    - (ansible_devices[device].holders | length == 0) or (ansible_devices[device].holders[0] | regex_search("_arch_") is not none)
    - ansible_devices[device].links.labels | length == 0
    - ansible_devices[device].size == arch_disk_size
    - 'device not in disk_ids'

- name: Check if the required storage device for DB2 log archives is found
  fail:
    msg: "Could not find a free {{ arch_disk_size }} storage device for DB2 log archives"
  when:  arch_disk is not defined

- name: Create a volume group for DB2 log archives
  lvg:
    vg: "{{ sap_sid|lower }}_arch_vg"
    pvs: "/dev/{{ arch_disk }}"
    pesize: "32"

- name: Get the disk for SAP instance
  ansible.builtin.set_fact:
    sap_disk: "{{ device }}"
    disk_ids: "{{ disk_ids + [device]  }}"
  loop: "{{ ansible_devices.keys() | list }}"
  loop_control:
    loop_var: device
  when:
    - device | regex_search("dm-") is none
    - ansible_devices[device].partitions.keys() | length == 0
    - (ansible_devices[device].holders | length == 0) or (ansible_devices[device].holders[0] | regex_search("_app_") is not none)
    - ansible_devices[device].links.labels | length == 0
    - ansible_devices[device].size == sap_disk_size
    - 'device not in disk_ids'

- name: Check if the required storage device for SAP instance is found
  fail:
    msg: "Could not find a free {{ sap_disk_size }} storage device for SAP instance"
  when:  sap_disk is not defined

- name: Create a volume group for SAP instance
  lvg:
    vg: "{{ sap_sid|lower }}_app_vg"
    pvs: "/dev/{{ sap_disk }}"
    pesize: "32"

# SWAP sizing:
# - SAP notes: 
#   - 2369910 - SAP Software on Linux: General information (v17)
#   - 2578899 - SUSE Linux Enterprise Server 15: Installation Note (v44)
#   - 1597355 - Swap-space recommendation for Linux (v3)

- name: Get the swap logical volume size for RAM lower than 32 GB
  set_fact:
    swap_lv_size: "{{ app_ram | int * 2 }}g"
  when: app_ram | int < 32

- name: Get the swap logical volume size for RAM higher than 32 GB and lower than 8192
  set_fact:
    swap_lv_size: "{{ data_swap.size }}g"
  loop: "{{ swap_lv }}"
  loop_control:
    loop_var: data_swap
  when: (app_ram | int >= 32) and (app_ram | int < 8192) and (app_ram | int >= data_swap.ram_min) and (app_ram | int <= data_swap.ram_max)

- name: Get the swap logical volume size for RAM higher than 8192
  set_fact:
    # swap_lv_size: "320g"
    swap_lv_size: "32g"
  when: app_ram | int >= 8192

- name: Create a logical volume for swap
  lvol:
    vg: "{{ sap_sid|lower }}_swap_vg"
    lv: "{{ sap_sid|lower }}_swap_lv"
    size: "{{ swap_lv_size }}"

- name: Create a logical volume for /db2/db2{{ sap_sid|lower }}
  lvol:
    vg: "{{ sap_sid|lower }}_data_vg"
    lv: "{{ sap_sid|lower }}_db2software_lv"
    size: "{{ db2software_lv_size }}"

- name: Create a logical volume for /db2/{{ sap_sid|upper }}
  lvol:
    vg: "{{ sap_sid|lower }}_data_vg"
    lv: "{{ sap_sid|lower }}_db2_lv"
    size: "{{ db2_lv_size }}"

- name: Create a logical volume for /db2/{{ sap_sid|upper }}/db2dump
  lvol:
    vg: "{{ sap_sid|lower }}_data_vg"
    lv: "{{ sap_sid|lower }}_db2dump_lv"
    size: "{{ db2dump_lv_size }}"

- name: Create a logical volume for /db2/{{ sap_sid|upper }}/sapdata1
  lvol:
    vg: "{{ sap_sid|lower }}_data_vg"
    lv: "{{ sap_sid|lower }}_sapdata1_lv"
    size: "{{ sapdata1_lv_size }}"

- name: Create a logical volume for /db2/{{ sap_sid|upper }}/sapdata2
  lvol:
    vg: "{{ sap_sid|lower }}_data_vg"
    lv: "{{ sap_sid|lower }}_sapdata2_lv"
    size: "{{ sapdata2_lv_size }}"         

- name: Create a logical volume for /db2/{{ sap_sid|upper }}/sapdata3
  lvol:
    vg: "{{ sap_sid|lower }}_data_vg"
    lv: "{{ sap_sid|lower }}_sapdata3_lv"
    size: "{{ sapdata3_lv_size }}"

- name: Create a logical volume for /db2/{{ sap_sid|upper }}/sapdata4
  lvol:
    vg: "{{ sap_sid|lower }}_data_vg"
    lv: "{{ sap_sid|lower }}_sapdata4_lv"
    size: "{{ sapdata4_lv_size }}"

- name: Create a logical volume for /db2/{{ sap_sid|upper }}/saptmp1
  lvol:
    vg: "{{ sap_sid|lower }}_data_vg"
    lv: "{{ sap_sid|lower }}_saptmp1_lv"
    size: "{{ saptmp1_lv_size }}"

- name: Create a logical volume for /db2/{{ sap_sid|upper }}/saptmp2
  lvol:
    vg: "{{ sap_sid|lower }}_data_vg"
    lv: "{{ sap_sid|lower }}_saptmp2_lv"
    size: "{{ saptmp2_lv_size }}"

- name: Create a logical volume for /db2/{{ sap_sid|upper }}/saptmp3
  lvol:
    vg: "{{ sap_sid|lower }}_data_vg"
    lv: "{{ sap_sid|lower }}_saptmp3_lv"
    size: "{{ saptmp3_lv_size }}"

- name: Create a logical volume for /db2/{{ sap_sid|upper }}/saptmp4
  lvol:
    vg: "{{ sap_sid|lower }}_data_vg"
    lv: "{{ sap_sid|lower }}_saptmp4_lv"
    size: "{{ saptmp4_lv_size }}"

- name: Create a logical volume for /db2/{{ sap_sid|upper }}/log_dir
  lvol:
    vg: "{{ sap_sid|lower }}_log_vg"
    lv: "{{ sap_sid|lower }}_log_lv"
    size: "{{ log_lv_size }}"

- name: Create a logical volume for /db2/{{ sap_sid|upper }}/log_archive
  lvol:
    vg: "{{ sap_sid|lower }}_arch_vg"
    lv: "{{ sap_sid|lower }}_archlog_lv"
    size: "{{ archlog_lv_size }}"

- name: Create a logical volume for /usr/sap
  lvol:
    vg: "{{ sap_sid|lower }}_app_vg"
    lv: "{{ sap_sid|lower }}_usrsap_lv"
    size: "{{ usrsap_lv_size }}"

- name: Create a logical volume for /usr/sap/{{ sap_sid|upper }}
  lvol:
    vg: "{{ sap_sid|lower }}_app_vg"
    lv: "{{ sap_sid|lower }}_sap_lv"
    size: "{{ sap_lv_size }}"

- name: Create a logical volume for /sapmnt/{{ sap_sid|upper }}
  lvol:
    vg: "{{ sap_sid|lower }}_app_vg"
    lv: "{{ sap_sid|lower }}_sapmnt_lv"
    size: "{{ sapmnt_lv_size }}"

- name: Create a logical volume for /usr/sap/trans
  lvol:
    vg: "{{ sap_sid|lower }}_app_vg"
    lv: "{{ sap_sid|lower }}_saptrans_lv"
    size: "{{ saptrans_lv_size }}"      
    
- name: Create a swap filesystem
  filesystem:
    fstype: swap
    dev: "/dev/{{ sap_sid|lower }}_swap_vg/{{ sap_sid|lower }}_swap_lv"

- name: Create filesystem for /db2/db2{{ sap_sid|lower }}
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_db2software_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_db2_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}/db2dump
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_db2dump_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}/sapdata1
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_sapdata1_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}/sapdata2
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_sapdata2_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}/sapdata3
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_sapdata3_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}/sapdata4
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_sapdata4_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}/saptmp1
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_saptmp1_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}/saptmp2
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_saptmp2_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}/saptmp3
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_saptmp3_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}/saptmp4
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_saptmp4_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}/log_dir
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_log_vg/{{ sap_sid|lower }}_log_lv"

- name: Create filesystem for /db2/{{ sap_sid|upper }}/log_archive
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_arch_vg/{{ sap_sid|lower }}_archlog_lv"

- name: Create filesystem for /usr/sap
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_app_vg/{{ sap_sid|lower }}_usrsap_lv"

- name: Create filesystem for /usr/sap/{{ sap_sid|upper }}
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_app_vg/{{ sap_sid|lower }}_sap_lv"

- name: Create filesystem for /sapmnt/{{ sap_sid|upper }}
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_app_vg/{{ sap_sid|lower }}_sapmnt_lv"

- name: Create filesystem for /usr/sap/trans
  filesystem:
    fstype: ext4
    dev: "/dev/{{ sap_sid|lower }}_app_vg/{{ sap_sid|lower }}_saptrans_lv"

- name: Add swap device to /etc/fstab
  lineinfile:
    path: /etc/fstab
    regexp: "^/dev/{{ sap_sid|lower }}_swap_vg/{{ sap_sid|lower }}_swap_lv"
    line: "/dev/{{ sap_sid|lower }}_swap_vg/{{ sap_sid|lower }}_swap_lv  swap  swap  defaults  0 0"

- name: Check the current swap size
  set_fact:
    sap_vm_swap: "{{ ansible_swaptotal_mb }}"

- name: Mount swap volume
  command: swapon -a
  when: sap_vm_swap == 0

- name: Mount /db2/db2{{ sap_sid|lower }} and add it to /etc/fstab
  mount:
    path: "/db2/db2{{ sap_sid|lower }}"
    src: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_db2software_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }} and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}"
    src: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_db2_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }}/db2dump and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}/db2dump"
    src: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_db2dump_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }}/sapdata1 and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}/sapdata1"
    src: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_sapdata1_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }}/sapdata2 and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}/sapdata2"
    src: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_sapdata2_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }}/sapdata3 and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}/sapdata3"
    src: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_sapdata3_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }}/sapdata4 and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}/sapdata4"
    src: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_sapdata4_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }}/saptmp1 and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}/saptmp1"
    src: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_saptmp1_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }}/saptmp2 and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}/saptmp2"
    src: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_saptmp2_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }}/saptmp3 and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}/saptmp3"
    src: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_saptmp3_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }}/saptmp4 and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}/saptmp4"
    src: "/dev/{{ sap_sid|lower }}_data_vg/{{ sap_sid|lower }}_saptmp4_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }}/log_dir and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}/log_dir"
    src: "/dev/{{ sap_sid|lower }}_log_vg/{{ sap_sid|lower }}_log_lv"
    fstype: ext4
    state: mounted

- name: Mount /db2/{{ sap_sid|upper }}/log_archive and add it to /etc/fstab
  mount:
    path: "/db2/{{ sap_sid|upper }}/log_archive"
    src: "/dev/{{ sap_sid|lower }}_arch_vg/{{ sap_sid|lower }}_archlog_lv"
    fstype: ext4
    state: mounted

- name: Mount /usr/sap and add it to /etc/fstab
  mount:
    path: "/usr/sap"
    src: "/dev/{{ sap_sid|lower }}_app_vg/{{ sap_sid|lower }}_usrsap_lv"
    fstype: ext4
    state: mounted

- name: Mount /usr/sap/{{ sap_sid|upper }} and add it to /etc/fstab
  mount:
    path: "/usr/sap/{{ sap_sid|upper }}"
    src: "/dev/{{ sap_sid|lower }}_app_vg/{{ sap_sid|lower }}_sap_lv"
    fstype: ext4
    state: mounted

- name: Mount /sapmnt/{{ sap_sid|upper }} and add it to /etc/fstab
  mount:
    path: "/sapmnt/{{ sap_sid|upper }}"
    src: "/dev/{{ sap_sid|lower }}_app_vg/{{ sap_sid|lower }}_sapmnt_lv"
    fstype: ext4
    state: mounted

- name: Mount /usr/sap/trans and add it to /etc/fstab
  mount:
    path: "/usr/sap/trans"
    src: "/dev/{{ sap_sid|lower }}_app_vg/{{ sap_sid|lower }}_saptrans_lv"
    fstype: ext4
    state: mounted
...
